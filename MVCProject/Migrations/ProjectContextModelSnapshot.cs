// <auto-generated />
using MVCProject.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCProject.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Hijab for Women Soft Cotton",
                            Name = "Hijab"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = " Hijab Solid Color 3 Layers Hijab",
                            Name = " Khimar "
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Muslim prayer long dress",
                            Name = " Dresses"
                        });
                });

            modelBuilder.Entity("MVCProject.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PathImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Code = "100h",
                            Description = "Hijab Scarf for Women Soft Cotton ",
                            PathImage = "https://m.media-amazon.com/images/I/619BQu-V1RL._AC_SX569_.jpg",
                            Price = 150m,
                            Quantity = 10,
                            Title = "Hijab Scarf "
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Code = "200v",
                            Description = "The Voile Chic jersey hijab scarf ",
                            PathImage = "https://m.media-amazon.com/images/I/71ijjqs2hBL._AC_SX569_.jpg",
                            Price = 250m,
                            Quantity = 20,
                            Title = "VOILE CHIC Premium Jersey Hijab "
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Code = "300d",
                            Description = "OBEEII Muslim Dress for Women",
                            PathImage = "https://m.media-amazon.com/images/I/41bxd5WS9SL._AC_SX569_.jpg",
                            Price = 550m,
                            Quantity = 5,
                            Title = "Satin Dress"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            Code = "400d",
                            Description = "Abayas for Women Muslim Dress",
                            PathImage = "https://m.media-amazon.com/images/I/51BesB1bCIL._AC_SX569_.jpg",
                            Price = 650m,
                            Quantity = 15,
                            Title = "Sleeve Maxi Dress"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Code = "300kh",
                            Description = "OLEMEK Women Muslim Long Khimar ",
                            PathImage = "https://m.media-amazon.com/images/I/71wzUtsdv3L._AC_SX569_.jpg",
                            Price = 200m,
                            Quantity = 10,
                            Title = "Long Khimar"
                        });
                });

            modelBuilder.Entity("MVCProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("MVCProject.Models.Product", b =>
                {
                    b.HasOne("MVCProject.Models.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MVCProject.Models.Category", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
